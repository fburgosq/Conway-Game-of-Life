{"version":3,"sources":["C:/Proyectos/CNB/back-end/gameoflife/src/$_gendir lazy","C:/Proyectos/CNB/back-end/gameoflife/src/app/app.component.html","C:/Proyectos/CNB/back-end/gameoflife/src/app/app.component.scss","C:/Proyectos/CNB/back-end/gameoflife/src/app/app.component.ts","C:/Proyectos/CNB/back-end/gameoflife/src/app/app.module.ts","C:/Proyectos/CNB/back-end/gameoflife/src/app/services/gameoflife.service.ts","C:/Proyectos/CNB/back-end/gameoflife/src/app/store/GameOfLife.actions.ts","C:/Proyectos/CNB/back-end/gameoflife/src/app/store/GameOfLife.effects.ts","C:/Proyectos/CNB/back-end/gameoflife/src/app/store/GameOfLife.reducers.ts","C:/Proyectos/CNB/back-end/gameoflife/src/app/store/app.reducers.ts","C:/Proyectos/CNB/back-end/gameoflife/src/environments/environment.ts","C:/Proyectos/CNB/back-end/gameoflife/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Proyectos/CNB/back-end/gameoflife/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"<div id=\\\"formControls\\\">\\n  <form>\\n    <div class=\\\"form-control\\\">\\n      <label>Timer in seconds: </label>\\n      <input [(ngModel)]=\\\"doTimer\\\" name=\\\"doTimer\\\" (keyup)=\\\"resetTimer();\\\" >\\n    </div>\\n  </form>\\n</div>\\n\\n\\n<div id=\\\"controls\\\">\\n  <button *ngIf=\\\"!start_game\\\" class=\\\"btn btn-primary\\\" (click)=\\\"populateLife();\\\">Start Game</button>\\n  <button *ngIf=\\\"start_game\\\" class=\\\"btn btn-primary\\\" (click)=\\\"killPopulateLife();\\\">Stop</button>\\n  <button *ngIf=\\\"start_game\\\" class=\\\"btn btn-primary\\\" (click)=\\\"resetPopulateLife();\\\">Reset</button>\\n</div>\\n\\n\\n<div id=\\\"main-grid\\\"\\n      *ngIf=\\\"gol_grid$ | async as mainGrid\\\">\\n  <div id=\\\"rows\\\" *ngFor=\\\"let row of mainGrid; let y = index\\\">\\n    <div \\n      id=\\\"cols\\\" \\n      *ngFor=\\\"let col of row; let x = index\\\" \\n      [ngClass]=\\\"{'cell': true, 'cell-live': col}\\\"\\n      >\\n    </div>\\n    <div class=\\\"clear-row\\\"></div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Proyectos/CNB/back-end/gameoflife/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#controls {\\n  margin-bottom: 15px;\\n  margin-top: 15px; }\\n\\n.cell {\\n  float: left;\\n  cursor: pointer;\\n  width: 15px;\\n  height: 15px;\\n  background: white;\\n  border: 0.001em solid #ddd; }\\n\\n.clear-row {\\n  clear: both; }\\n\\n.cell-death {\\n  background: #fff; }\\n\\n.cell-live {\\n  background: #666; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Proyectos/CNB/back-end/gameoflife/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\n\n\n/**\n * SERVICES\n */\nimport { GameOfLifeService } from './services/gameoflife.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n\n  /**\n   * @param Observable<Number[]>, keeps matrix grid data\n   */\n  gol_grid$; \n\n  start_game = false;\n\n  /**\n   * NgModels\n   */\n  doTimer: number = 600;\n\n\n  constructor(\n    private _gameoflifeService: GameOfLifeService\n  ) { \n    /**\n     * Request Store Game Of Life Data<Array<number>>\n     */\n    this.gol_grid$ = this._gameoflifeService.requestStore();\n\n    this.createBoard();\n\n  }\n\n  /**\n     * Create First Time Board/Grid, for the Game\n     */  \n  createBoard() {\n    this._gameoflifeService.requestTryCreateBoard();\n  }\n\n  populateLife() {\n    this.start_game = true;\n    /**\n     * Creates a tic tac clock to populate life\n     */\n    this._gameoflifeService.requestPopulateLife(this.doTimer);\n  }\n\n  /**\n   * Stop populate life in the game\n   */\n  killPopulateLife() {\n    this.start_game = false;\n    this._gameoflifeService.killPopulateLife();\n  }\n\n  /**\n   * Restart the game\n   */\n  resetPopulateLife() {\n    this.killPopulateLife();\n    this.createBoard();\n  }\n\n  resetTimer() {\n    if (this.start_game)\n      this.populateLife();\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Proyectos/CNB/back-end/gameoflife/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n/**\n * NgRx Store / Actions / Effects\n */\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { reducers } from './store/app.reducers';\nimport { GOLEffects } from './store/GameOfLife.effects';\n\n/**\n * SERVICES\n */\nimport { GameOfLifeService } from './services/gameoflife.service';\n\n/**\n * COMPONENTS\n */\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([GOLEffects]),\n  ],\n  providers: [\n    GameOfLifeService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Proyectos/CNB/back-end/gameoflife/src/app/app.module.ts","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * NGRX\r\n */\r\nimport { Store } from '@ngrx/store';\r\nimport * as GOLActions from '../store/GameOfLife.actions';\r\nimport { AppState } from '../store/app.reducers';\r\n\r\n/**\r\n * RxJs\r\n */\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/interval';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Injectable()\r\nexport class GameOfLifeService {\r\n\r\n    populate: Subscription;\r\n\r\n    constructor(\r\n        private _store: Store<AppState>\r\n    ) { }\r\n\r\n    /**\r\n     * Request Game Of Life Store DATA\r\n     * @return Observable<number[]>, Observable with GameOfLife Store Data\r\n     */\r\n    requestStore(): Observable<number[]> {\r\n        return this._store.select('gameoflife');\r\n    }\r\n\r\n    /**\r\n     * Executes Action `TryCreate_Board() => trigger @Effects`\r\n     */\r\n    requestTryCreateBoard() {\r\n        this._store.dispatch(new GOLActions.TryCreate_Board());\r\n    }\r\n\r\n    /**\r\n     * Request to Populate Life in the grid/matrix/board of the Game Of Life\r\n     */\r\n    requestPopulateLife(utime: number) {\r\n        this.populate = \r\n            Observable.interval(utime)\r\n                .subscribe(\r\n                    () => this._store.dispatch(new GOLActions.TryPopulate_Life())\r\n                );\r\n    }\r\n\r\n    /**\r\n     * Kill the populateLife interval\r\n     */\r\n    killPopulateLife() {\r\n        this.populate.unsubscribe();\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Proyectos/CNB/back-end/gameoflife/src/app/services/gameoflife.service.ts","import { Action } from '@ngrx/store';\r\n\r\n//Define List of Actions\r\n\r\nexport const TRY_CREATE_BOARD = 'TRY_CREATE_BOARD';\r\nexport const TRY_POPULATE_LIFE = 'TRY_POPULATE_LIFE';\r\nexport const POPULATE_LIFE = 'POPULATE_LIFE';\r\n\r\nexport class TryCreate_Board implements Action {\r\n    readonly type = TRY_CREATE_BOARD;\r\n}\r\n\r\nexport class Populate_Life implements Action {\r\n    readonly type = POPULATE_LIFE;\r\n\r\n    constructor(public payload: Array<number>) {}\r\n}\r\n\r\nexport class TryPopulate_Life implements Action {\r\n    readonly type = TRY_POPULATE_LIFE;\r\n}\r\n\r\nexport type GameOfLifeActions = TryCreate_Board | Populate_Life | TryPopulate_Life;\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Proyectos/CNB/back-end/gameoflife/src/app/store/GameOfLife.actions.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n//RxJs\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/take';\r\nimport 'rxjs/add/operator/first';\r\nimport 'rxjs/add/operator/mergeMap';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport 'rxjs/add/operator/shareReplay';\r\n\r\n//NgRx Store\r\nimport { Actions, Effect } from '@ngrx/effects'\r\nimport * as GameOfLifeActions from './GameOfLife.actions';\r\n\r\n@Injectable()\r\nexport class GOLEffects {\r\n\r\n    // private readonly GAME_OF_LIFE = 'http://localhost/gameoflife/gameoflife.php';\r\n    // private readonly POPULATE_GOL = 'http://localhost/gameoflife/populate.php';\r\n\r\n    private readonly GAME_OF_LIFE = 'http://www.yobsled.com/cnb/gameoflife/gameoflife.php';\r\n    private readonly POPULATE_GOL = 'http://www.yobsled.com/cnb/gameoflife/populate.php';\r\n\r\n    //REQUEST TO THE BACK END SERVER THE BOARD/GRID\r\n    @Effect()\r\n    createBoard = this.actions$\r\n                    .ofType(GameOfLifeActions.TRY_CREATE_BOARD)\r\n                    .map( (action: GameOfLifeActions.TryCreate_Board) => {\r\n                        return;\r\n                    })\r\n                    .switchMap(\r\n                        () => {\r\n                            /**\r\n                             * Request Board/grid, FIRST TIME\r\n                             */\r\n                            return this._httpClnt.post<Array<number>>(\r\n                                        this.GAME_OF_LIFE, '',\r\n                                        {observe: 'body', responseType: 'json'}\r\n                                    )\r\n                                    .shareReplay()\r\n                                    .take(1);\r\n                        }\r\n                    ).mergeMap(\r\n                        (payload: Array<number>) => {\r\n                            return [\r\n                                {\r\n                                    type: GameOfLifeActions.POPULATE_LIFE,\r\n                                    payload: payload\r\n                                }\r\n                            ];\r\n                        }\r\n                    );\r\n\r\n\r\n    //REQUEST TO THE BACK END SERVER THE BOARD/GRID\r\n    @Effect()\r\n    populateLife = this.actions$\r\n                    .ofType(GameOfLifeActions.TRY_POPULATE_LIFE)\r\n                    .map( (action: GameOfLifeActions.TryPopulate_Life) => {\r\n                        return;\r\n                    })\r\n                    .switchMap(\r\n                        () => {\r\n                            /**\r\n                             * Request Board/grid, FIRST TIME\r\n                             */\r\n                            return this._httpClnt.post<Array<number>>(\r\n                                        this.POPULATE_GOL, '',\r\n                                        {observe: 'body', responseType: 'json'}\r\n                                    )\r\n                                    .shareReplay()\r\n                                    .take(1);\r\n                        }\r\n                    ).mergeMap(\r\n                        (payload: Array<number>) => {\r\n                            return [\r\n                                {\r\n                                    type: GameOfLifeActions.POPULATE_LIFE,\r\n                                    payload: payload\r\n                                }\r\n                            ];\r\n                        }\r\n                    );\r\n                    \r\n    constructor(\r\n        private actions$: Actions,\r\n        private _httpClnt: HttpClient\r\n    ) { }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Proyectos/CNB/back-end/gameoflife/src/app/store/GameOfLife.effects.ts","import * as GOLActions from './GameOfLife.actions';\r\n\r\n\r\nconst initialLoginState = [];\r\n\r\n/**\r\n * Login reducer for LoginStore\r\n * \r\n * @since 1.0.0\r\n * \r\n * @param state \r\n * @param action \r\n */\r\nexport function GameOfLifeReducer (\r\n    state = initialLoginState, \r\n    action: GOLActions.GameOfLifeActions) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GOLActions.POPULATE_LIFE:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Proyectos/CNB/back-end/gameoflife/src/app/store/GameOfLife.reducers.ts","//@NgRx\r\nimport { ActionReducerMap } from '@ngrx/store';\r\nimport * as GameOfLife from './GameOfLife.reducers';\r\n\r\n/**\r\n * Main Interface for @NgRx/Store\r\n */\r\nexport interface AppState {\r\n    gameoflife: Array<number>\r\n}\r\n\r\n/**\r\n * Define the Reducers for the @NgRx store (set in app.module.ts)\r\n */\r\nexport const reducers: ActionReducerMap<AppState> = {\r\n    gameoflife: GameOfLife.GameOfLifeReducer\r\n};\n\n\n// WEBPACK FOOTER //\n// C:/Proyectos/CNB/back-end/gameoflife/src/app/store/app.reducers.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Proyectos/CNB/back-end/gameoflife/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Proyectos/CNB/back-end/gameoflife/src/main.ts"],"sourceRoot":"webpack:///"}